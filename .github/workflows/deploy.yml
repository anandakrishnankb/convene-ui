name: Deploy React App to Azure

on:
  push:
    branches:
      - master # Trigger deployment on push to the main branch
  pull_request:
    branches:
      - master # Trigger deployment on push to the main branch

jobs:
  build_and_analyze:
    name: Build, Analyze, and Save Docker Image
    runs-on: ubuntu-latest

    outputs:
      IMAGE_TAG: ${{ steps.build-image.outputs.IMAGE_TAG }}

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Disable shallow clones for better SonarQube analysis
          
      - name: Build Docker image with versioned tag
        id: build-image
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          IMAGE_TAG="c-ui:v1-${TIMESTAMP}"
          docker build -t $IMAGE_TAG .
          echo "::set-output name=IMAGE_TAG::$IMAGE_TAG"


      # Step 3: Install dependencies
      - name: Save Docker image as tar file
        run: |
          IMAGE_TAG=${{ steps.build-image.outputs.IMAGE_TAG }}
          docker save $IMAGE_TAG -o c-ui.tar

      # - name: Add SSH key to agent
      #   uses: appleboy/ssh-action@v0.1.0
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY_SCP }}
      #     passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
      #     debug: true

      # Step 4: Build the React app
      - name: Upload Docker image tar to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY_SCP }}
          source: "c-ui.tar"
          target: "~/convene_git/"

  deploy:
    name: Deploy Docker Container
    runs-on: ubuntu-latest
    needs: build_and_analyze

    steps:
      - name: Deploy Docker container on server
        run: |
          IMAGE_TAG=${{ needs.build_and_analyze.outputs.IMAGE_TAG }}
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
            echo "Loading Docker image from tar..."
            docker load -i ~/convene_git/c-ui.tar
            echo "Stopping and removing any existing container..."
            docker stop convene-ui-container || true
            docker rm convene-ui-container || true
            echo "Running new container..."
            docker run -d --name convene-ui-container -p 8801:8801 $IMAGE_TAG
            echo "Removing Docker image tar file..."
            rm ~/convene_git/c-ui.tar
          EOF


     
